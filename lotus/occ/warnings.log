

occ-list-select: selected = nil
Error in pre-command-hook ((closure ((hookfn closure #1 nil (lotus-utils-debug 'event-input :debug "%s: %s: hookfn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (remove-hook 'pre-command-hook #'(lambda nil (funcall hookfn))) (if (eql last-event-frame frame) (progn (setq frame nil) nil) (let ((old-frame (selected-frame)) (old-buffer (current-buffer))) (unwind-protect (progn (select-frame last-event-frame 'norecord) (progn (lotus-utils-debug 'event-input :debug "%s: %s: hookfn: %s <%s> running readfn from hookfn outside timer minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel (lotus-active-recursive-edit)) (lotus-utils-debug 'event-input :debug "%s: %s: hookfn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (setq frame nil) (run-with-timer 0 nil #'...) (progn (lotus-utils-debug ... :debug "%s: %s: hookfn: %s <%s> add quiet 2 frame=%s minibuffer<%s>" ... ... "occ-do-safe-properties-window-editor" :cancel ... ...) (lotus-utils-debug ... :debug "%s: %s: hookfn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" ... ... "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (select-frame-set-input-disable-raise) (safe-exit-recursive-edit-if-active)))) (if (frame-live-p old-frame) (progn (select-frame old-frame 'norecord))) (if (buffer-live-p old-buffer) (progn (set-buffer old-buffer))))))) (readfn closure #1 nil (progn (setq frame (selected-frame)) (add-hook 'pre-command-hook #'(lambda nil (funcall hookfn))) (progn (lotus-utils-debug 'event-input :debug "%s: %s: readfn: %s <%s> inside readfn minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel (lotus-active-recursive-edit)) (lotus-utils-debug 'event-input :debug "%s: %s: readfn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (funcall set-advice-fn) (prog1 (progn nil nil (prog1 (let (...) (if ... ... ...)) nil)) (remove-hook 'pre-command-hook #'(lambda nil (funcall hookfn))) (funcall set-advice-fn))))) (set-advice-fn closure ((sel-frame-adviced-p) (frame . #<frame emacs@dell5480 0x18e12898>) (timeout . 7) (ap-transf t actions general edit checkout) (ap-normal t actions general checkout) (builder . occ-obj-build-ctsk-with) (filters nil :incremental :identity) (timeout . 7) (return-transform . t) (ap-transf t actions general edit checkout) ...) nil (if sel-frame-adviced-p (if (select-frame-set-input-focus-no-raise-p) nil (lotus-utils-debug 'event-input :debug "%s: %s: set-advice-fn: %s <%s> add quiet 5 as already was present minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel (lotus-active-recursive-edit)) (lotus-utils-debug 'event-input :debug "%s: %s: set-advice-fn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (select-frame-set-input-disable-raise)) (if (select-frame-set-input-focus-no-raise-p) (progn (lotus-utils-debug 'event-input :debug "%s: %s: readfn: %s <%s> remove quiet 5 as already was present minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel (lotus-active-recursive-edit)) (lotus-utils-debug 'event-input :debug "%s: %s: set-advice-fn: name=%s <%s> last-input-event: %s last-event-frame: %s frame: %s selected-frame=%s eq=%s eql=%s equal=%s minibuffer<%s>" (time-stamp-string) 'lotus-with-other-frame-event-debug "occ-do-safe-properties-window-editor" :cancel last-input-event last-event-frame ...) (select-frame-set-input-enable-raise))))) (sel-frame-adviced-p) (frame . #<frame emacs@dell5480 0x18e12898>) (timeout . 7) (ap-transf t actions general edit checkout) (ap-normal t actions general checkout) (builder . occ-obj-build-ctsk-with) (filters nil :incremental :identity) ...) nil (funcall hookfn))): (wrong-type-argument frame-live-p nil)
stop with org-clock-stop-check-timer
started with org-clock-start-check-timer



